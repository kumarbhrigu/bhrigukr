[
  {
    "objectID": "miipw.html",
    "href": "miipw.html",
    "title": "lmeMIIPW",
    "section": "",
    "text": "shinyApp(\n  ui_page1 &lt;- fluidPage(\n    titlePanel(\"MIIPW: An R package for longitudinal data model in the presence of incmplete observations\"),\n    sidebarLayout(\n      sidebarPanel(\n        h3(\"MIIPW\"),\n        h5(\"Developed by :\"),\n        h6(\"Atanu Bhattacharjee\"),\n        h6(\"Bhrigu Kumar Rajbongshi\"),\n        h6(\"Gajendra K Vishwakarma\"),\n        p('Download MIIPW package from'),\n        a(\"https://cran.r-project.org/web/packages/MIIPW/index.html\",\n          href = \"https://cran.r-project.org/web/packages/MIIPW/index.html\")\n      ),\n      mainPanel(\n        h3(\"Introduction\"),\n        p(\"MIIPW R package contains functions for data analysis of Repeated measurement using GEE. Data may contain missing value in response and covariates. For parameter estimation through Fisher Scoring algorithm, Mean Score and Inverse Probability Weighted method combining with Multiple Imputation are used when there is missing value in covariates/response. Mainly three functions are used here lmeipw(), lmeaipw() and lmemeanscore(). Separate mixed effect models for imputation and inverse probability weight are used in these function. For more details about mean score method, inverse probability weighted method see \"),\n        p(\"Bhattacharjee, A., Vishwakarma, G. K., Rajbongshi, B. K., & Tripathy, A. (2024). MIIPW: An R package for Generalized Estimating Equations with missing data integration using a combination of mean score and inverse probability weighted approaches and multiple imputation. Expert Systems with Applications, 238, 121973.\"),\n        p(\"A short glimpse of the default dataset (PBC2 data set) we have used here is \"),\n         verbatimTextOutput('exampledatalong'),\n        p(\"A scatter plot of alkaline~year (alkaline values are tranformed in log scale)\"), \n        plotOutput('exampledatalong1'),\n        p(\"To explore more about this we can use a visualiztion plot using naniar package\"),\n        plotOutput(\"missplot\")\n        \n     \n        \n      )\n    )\n  ),\n  server_page1 &lt;- function(input, output, session) {\n    output$exampledatalong &lt;- renderPrint({\n       #cat('First 10 rows of default Longitudinal data')\n      pbc2[pbc2$id&lt;=3,]\n    })\n    output$exampledatalong1&lt;-renderPlot({\n      \n      \n      meanpbc2 &lt;-pbc2 %&gt;% \n      group_by(id) %&gt;% \n      mutate(visit=row_number())\n        ggplot()+\n        geom_point(data = pbc2, aes(x = year, y = alkaline, group = id))+\n        #geom_point(data=pbc2,aes(x=year,y=alkaline),color=drug)+\n        geom_line()\n          \n    })\n    \n    output$missplot&lt;-renderPlot({\n      naniar::vis_miss(pbc2[,-c(1:11,19,20)])\n    })\n    \n  },\n  options = list(height=1000,width=\"100%\")\n)"
  },
  {
    "objectID": "miipw.html#column",
    "href": "miipw.html#column",
    "title": "lmeMIIPW",
    "section": "",
    "text": "shinyApp(\n  ui_page1 &lt;- fluidPage(\n    titlePanel(\"MIIPW: An R package for longitudinal data model in the presence of incmplete observations\"),\n    sidebarLayout(\n      sidebarPanel(\n        h3(\"MIIPW\"),\n        h5(\"Developed by :\"),\n        h6(\"Atanu Bhattacharjee\"),\n        h6(\"Bhrigu Kumar Rajbongshi\"),\n        h6(\"Gajendra K Vishwakarma\"),\n        p('Download MIIPW package from'),\n        a(\"https://cran.r-project.org/web/packages/MIIPW/index.html\",\n          href = \"https://cran.r-project.org/web/packages/MIIPW/index.html\")\n      ),\n      mainPanel(\n        h3(\"Introduction\"),\n        p(\"MIIPW R package contains functions for data analysis of Repeated measurement using GEE. Data may contain missing value in response and covariates. For parameter estimation through Fisher Scoring algorithm, Mean Score and Inverse Probability Weighted method combining with Multiple Imputation are used when there is missing value in covariates/response. Mainly three functions are used here lmeipw(), lmeaipw() and lmemeanscore(). Separate mixed effect models for imputation and inverse probability weight are used in these function. For more details about mean score method, inverse probability weighted method see \"),\n        p(\"Bhattacharjee, A., Vishwakarma, G. K., Rajbongshi, B. K., & Tripathy, A. (2024). MIIPW: An R package for Generalized Estimating Equations with missing data integration using a combination of mean score and inverse probability weighted approaches and multiple imputation. Expert Systems with Applications, 238, 121973.\"),\n        p(\"A short glimpse of the default dataset (PBC2 data set) we have used here is \"),\n         verbatimTextOutput('exampledatalong'),\n        p(\"A scatter plot of alkaline~year (alkaline values are tranformed in log scale)\"), \n        plotOutput('exampledatalong1'),\n        p(\"To explore more about this we can use a visualiztion plot using naniar package\"),\n        plotOutput(\"missplot\")\n        \n     \n        \n      )\n    )\n  ),\n  server_page1 &lt;- function(input, output, session) {\n    output$exampledatalong &lt;- renderPrint({\n       #cat('First 10 rows of default Longitudinal data')\n      pbc2[pbc2$id&lt;=3,]\n    })\n    output$exampledatalong1&lt;-renderPlot({\n      \n      \n      meanpbc2 &lt;-pbc2 %&gt;% \n      group_by(id) %&gt;% \n      mutate(visit=row_number())\n        ggplot()+\n        geom_point(data = pbc2, aes(x = year, y = alkaline, group = id))+\n        #geom_point(data=pbc2,aes(x=year,y=alkaline),color=drug)+\n        geom_line()\n          \n    })\n    \n    output$missplot&lt;-renderPlot({\n      naniar::vis_miss(pbc2[,-c(1:11,19,20)])\n    })\n    \n  },\n  options = list(height=1000,width=\"100%\")\n)"
  },
  {
    "objectID": "miipw.html#column-1",
    "href": "miipw.html#column-1",
    "title": "lmeMIIPW",
    "section": "Column",
    "text": "Column\n\nshinyApp(\n  ui_page2 &lt;- fluidPage(\n  \n  titlePanel(\"lmeaipw\"),\n  sidebarLayout(\n    sidebarPanel(\n      radioButtons(\"data_option_page2\", \"Select data source:\",\n                   c(\"Upload your own dataset\" = \"upload\",\n                     \"Use default(PBC2 data)\" = \"default\")),\n      conditionalPanel(\n        condition = \"input.data_option_page2== 'default'\",\n        selectInput(\"pid_page2\", \"ID\", choices=unique(pbc2$id),selectize = FALSE,size=5 )\n      ),\n      conditionalPanel(\n        condition = \"input.data_option_page2 == 'upload'\",\n        fileInput(\"lfile_page2\", \"Upload Longitudinal Data (CSV format)\"),\n        uiOutput(\"pid_slider_upload_page2\")\n      ),\n      selectInput(\"idvar_page2\", \"ID variable\", choices =NULL),\n      selectInput(\"timevar_page2\", \"Time dependent covariate\", choices = NULL),\n      textInput(\"analysismodel_page2\", \"Longitudinal data analysis model\", value = \"alkaline~year\"),\n      textInput(\"impmodel_page2\", \"Imputation model for missing response\", value = \"~year+age+sex+drug+serBilir+(1|id)\"),\n      textInput(\"wgtmodel_page2\", \"IPW model\", value = \"~year+age+sex+drug+serBilir+(1|id)\"),\n      numericInput('by_page2',\"Interval length for prediction\",value=1),\n      numericInput(\"nimp_page2\", \"Number of imputation\", value = 1),\n      actionButton(\"submit_page2\", \"Submit\")\n    ),\n    mainPanel(\n      p('lmeaipw(): a function specifically developed(If your dataset donot have missing value. \n      Please donot use this...) for semiparametric marginal model for longitudinal data where\n      there are missing values in response variable (currently we are considering Continuous/\n      extension for other option will be done in future) of the analysis model. \n      For more information about the arguments of the function please look ',a(\"here.\",href = \"https://cran.r-project.org/web/packages/jmBIG/index.html\")),\n      \n      verbatimTextOutput('summarymodel_page2'),\n      textOutput('selected_var_page2'),\n      textOutput('selectedID_page2'),\n      plotOutput('predplot_page2')\n    )\n  )\n),\n  server_page2 &lt;- function(input, output, session) {\n  defaultlongdata_page2 &lt;- reactive({\n    if (input$data_option_page2 == 'upload') {\n      req(input$lfile_page2)\n      defaultlongdata_page2 &lt;- read.csv(input$lfile_page2$datapath)\n    } else {\n      defaultlongdata_page2 &lt;- pbc2\n    }\n    return(defaultlongdata_page2)\n  })\n  \n  observeEvent(defaultlongdata_page2(), {\n    updateSelectInput(session, \"idvar_page2\", choices = names(defaultlongdata_page2()))\n  })\n  defaultlongdataid_page2 &lt;- reactive({\n    if (input$data_option_page2 == 'upload') {\n      req(input$lfile_page2)\n      req(input$idvar_page2)\n      defaultlongdataid_page2 &lt;- read.csv(input$lfile_page2$datapath)\n      defaultlongdataid_page2 &lt;-defaultlongdataid_page2[!duplicated(defaultlongdataid_page2[[input$idvar_page2]]),]\n    } else {\n      defaultlongdataid_page2 &lt;- pbc2\n      defaultlongdataid_page2 &lt;-defaultlongdataid_page2[!duplicated(defaultlongdataid_page2[[input$idvar_page2]]),]\n    }\n    return(defaultlongdataid_page2)\n  })\n  \n  # Render PID slider for uploaded data\n  output$pid_slider_upload_page2 &lt;- renderUI({\n    req(input$idvar_page2)\n    tagList(\n      selectInput(\"pid_page22\", \"Subject ID\", choices=defaultlongdataid_page2()[[input$idvar_page2]],selectize = FALSE,size=5)\n    )\n  })\n  \n  observeEvent(defaultlongdata_page2(), {\n    updateSelectInput(session, \"timevar_page2\", choices = names(defaultlongdata_page2()))\n  })\n  output$selected_var_page2 &lt;- reactive({\n    \n    if (input$data_option_page2 == \"default\") {\n      req(input$pid_page2)\n      paste(\"You have selected patient ID\", input$pid_page2)\n    } else {\n      req(input$pid_page22)\n      paste(\"Uploaded data selected with patient ID\",input$pid_page22)\n    }\n  })\n  \n  output$selectedID_page2 &lt;- reactive({\n    if (input$data_option_page2 == \"default\") {\n      req(input$pid_page2)\n      paste('Prediction of marginal effect using lmeaipw() for the selected subject ID: ',input$pid_page2)\n    } else {\n      req(input$pid_page22)\n      paste('Prediction of marginal effect using lmeaipw() for the selected subject ID: ',input$pid_page22)\n    }\n  })\n  rv&lt;-reactiveValues(model_page2=NULL)\n  observeEvent(input$submit_page2,{\n    # Load default data\n    output$summarymodel_page2 &lt;- renderPrint({\n      req(input$analysismodel_page2)\n      req(input$impmodel_page2)\n      req(input$wgtmodel_page2)\n      req(input$idvar_page2)\n      req(input$nimp_page2)\n      \n      intval_page2&lt;-function(){\n        amodel_page2&lt;-as.formula(input$analysismodel_page2)\n        imodel_page2&lt;-as.formula(input$impmodel_page2)\n        wmodel_page2&lt;-as.formula(input$wgtmodel_page2)\n        newdata&lt;-defaultlongdata_page2()\n        r.ij&lt;-ifelse(is.na(defaultlongdata_page2()[[all.vars(amodel_page2)[1]]])==T,0,1)\n        newdata&lt;-cbind.data.frame(newdata,r.ij)\n        newdata&lt;-cbind(r.ij=ifelse(is.na(newdata[[all.vars(amodel_page2)[1]]])==T,0,1),newdata)\n        model.r&lt;-glmer(as.formula(paste0('r.ij',input$wgtmodel_page2)),family=binomial(link='logit'),\n                       data=newdata)\n        model.y&lt;-lmer(as.formula(paste0(all.vars(amodel_page2)[1],input$impmodel_page2)),data=na.omit(newdata))\n        nu&lt;-model.r@beta\n        psi&lt;-model.y@beta\n        sigma&lt;-get_variance_residual(model.y)\n        sigmaR&lt;-get_variance(model.r)$var.random\n        sigmaMiss&lt;-get_variance(model.y)$var.random\n        result&lt;-list()\n        result$nu&lt;-as.matrix(nu,ncol=1)\n        result$psi&lt;-as.matrix(psi,ncol=1)\n        result$sigma&lt;-sigma\n        result$sigmaR&lt;-sigmaR\n        result$sigmaMiss&lt;-sigmaMiss\n        result$psiCov&lt;-vcov(model.y)\n        return(result)\n      }\n      \n      intvalue_page2&lt;-intval_page2()\n      fitmodel_page22 &lt;- lmeaipw1(data= defaultlongdata_page2() ,\n                                  id= input$idvar_page2,\n                                  analysis.model= as.formula(input$analysismodel_page2),\n                                  wgt.model= as.formula(input$wgtmodel_page2),\n                                  imp.model= as.formula(input$impmodel_page2),\n                                  psiCov= intvalue_page2$psiCov,\n                                  nu= intvalue_page2$nu,\n                                  psi= intvalue_page2$psi,\n                                  sigma= intvalue_page2$sigma,\n                                  sigmaMiss= intvalue_page2$sigmaMiss,\n                                  sigmaR= intvalue_page2$sigmaR,\n                                  dist= 'gaussian',\n                                  link= 'identity',\n                                  maxiter= 200)\n      rv$model_page2&lt;-fitmodel_page22\n      list(beta=fitmodel_page22$beta,var.beta=fitmodel_page22$var.beta)\n    })\n    \n  })\n  \n   observeEvent(input$submit_page2,{\n     # Load default data\n     output$predplot_page2 &lt;- renderPlot({\n         req(input$data_option_page2)\n       if(input$data_option_page2 == \"default\"){\n         req(input$analysismodel_page2)\n         req(input$impmodel_page2)\n         req(input$wgtmodel_page2)\n         req(input$idvar_page2)\n         req(input$timevar_page2)\n         req(input$nimp_page2)\n         req(input$by_page2)\n         req(input$pid_page2)\n         modelfitplot&lt;-rv$model_page2\n         modeltimevar&lt;-input$timevar_page2\n         newdata&lt;-defaultlongdata_page2()[defaultlongdata_page2()[[input$idvar_page2]]==input$pid_page2,]\n         m22&lt;-predLME(newdata = newdata,fittedObject = rv$model_page2,time=input$timevar_page2,by=input$by_page2)\n         predplotLME(m22)\n       }else{\n         req(input$analysismodel_page2)\n         req(input$impmodel_page2)\n         req(input$wgtmodel_page2)\n         req(input$idvar_page2)\n         req(input$timevar_page2)\n         req(input$nimp_page2)\n         req(input$by_page2)\n         req(input$pid_page22)\n         modelfitplot&lt;-rv$model_page2\n         modeltimevar&lt;-input$timevar_page2\n         newdata&lt;-defaultlongdata_page2()[defaultlongdata_page2()[[input$idvar_page2]]==input$pid_page22,]\n         m22&lt;-predLME(newdata = newdata,fittedObject = rv$model_page2,time=input$timevar_page2,by=input$by_page2)\n         predplotLME(m22)\n       }\n     })\n   })\n},\n  options = list(height=1000,width=\"100%\")\n)"
  },
  {
    "objectID": "miipw.html#column-2",
    "href": "miipw.html#column-2",
    "title": "lmeMIIPW",
    "section": "Column",
    "text": "Column\n\nshinyApp(\n  ui_page3 &lt;- fluidPage(\n  \n  titlePanel(\"lmeipw\"),\n  sidebarLayout(\n    sidebarPanel(\n      radioButtons(\"data_option_page3\", \"Select data source:\",\n                   c(\"Upload your own dataset\" = \"upload\",\n                     \"Use default(PBC2 data)\" = \"default\")),\n      conditionalPanel(\n        condition = \"input.data_option_page3== 'default'\",\n        selectInput(\"pid_page3\", \"ID\", choices=unique(pbc2$id),selectize = FALSE,size=5 )\n      ),\n      conditionalPanel(\n        condition = \"input.data_option_page3 == 'upload'\",\n        fileInput(\"lfile_page3\", \"Upload Longitudinal Data (CSV format)\"),\n        uiOutput(\"pid_slider_upload_page3\")\n      ),\n      selectInput(\"idvar_page3\", \"ID variable\", choices =NULL),\n      selectInput(\"timevar_page3\", \"Time dependent covariate\", choices = NULL),\n      textInput(\"analysismodel_page3\", \"Longitudinal data analysis model\", value = \"alkaline~year\"),\n      textInput(\"impmodel_page3\", \"Imputation model for missing response\", value = \"~year+age+sex+drug+serBilir+(1|id)\"),\n      textInput(\"wgtmodel_page3\", \"IPW model\", value = \"~year+age+sex+drug+serBilir+(1|id)\"),\n      numericInput('by_page3',\"Interval length for prediction\",value=1),\n      numericInput(\"nimp_page3\", \"Number of imputation\", value = 1),\n      actionButton(\"submit_page3\", \"Submit\")\n    ),\n    mainPanel(\n      p('lmeipw(): a function specifically developed(If your dataset donot have missing value. \n      Please donot use this...) for semiparametric marginal model for longitudinal data where\n      there are missing values in response variable (currently we are considering Continuous/\n      extension for other option will be done in future) of the analysis model. \n      For more information about the arguments of the function please look ',a(\"here.\",href = \"https://cran.r-project.org/web/packages/jmBIG/index.html\")),\n      \n      verbatimTextOutput('summarymodel_page3'),\n      textOutput('selected_var_page3'),\n      textOutput('selectedID_page3'),\n      plotOutput('predplot_page3')\n    )\n  )\n)\n,\n  server_page3 &lt;- function(input, output, session) {\n  defaultlongdata_page3 &lt;- reactive({\n    if (input$data_option_page3 == 'upload') {\n      req(input$lfile_page3)\n      defaultlongdata_page3 &lt;- read.csv(input$lfile_page3$datapath)\n    } else {\n      defaultlongdata_page3 &lt;- pbc2\n    }\n    return(defaultlongdata_page3)\n  })\n  \n  observeEvent(defaultlongdata_page3(), {\n    updateSelectInput(session, \"idvar_page3\", choices = names(defaultlongdata_page3()))\n  })\n  defaultlongdataid_page3 &lt;- reactive({\n    if (input$data_option_page3 == 'upload') {\n      req(input$lfile_page3)\n      req(input$idvar_page3)\n      defaultlongdataid_page3 &lt;- read.csv(input$lfile_page3$datapath)\n      defaultlongdataid_page3 &lt;-defaultlongdataid_page3[!duplicated(defaultlongdataid_page3[[input$idvar_page3]]),]\n    } else {\n      defaultlongdataid_page3 &lt;- pbc2\n      defaultlongdataid_page3 &lt;-defaultlongdataid_page3[!duplicated(defaultlongdataid_page3[[input$idvar_page3]]),]\n    }\n    return(defaultlongdataid_page3)\n  })\n  \n  # Render PID slider for uploaded data\n  output$pid_slider_upload_page3 &lt;- renderUI({\n    req(input$idvar_page3)\n    tagList(\n      selectInput(\"pid_page33\", \"Subject ID\", choices=defaultlongdataid_page3()[[input$idvar_page3]],selectize = FALSE,size=5)\n    )\n  })\n  \n  observeEvent(defaultlongdata_page3(), {\n    updateSelectInput(session, \"timevar_page3\", choices = names(defaultlongdata_page3()))\n  })\n  output$selected_var_page3 &lt;- reactive({\n    \n    if (input$data_option_page3 == \"default\") {\n      req(input$pid_page3)\n      paste(\"You have selected patient ID\", input$pid_page3)\n    } else {\n      req(input$pid_page33)\n      paste(\"Uploaded data selected with patient ID\",input$pid_page33)\n    }\n  })\n  \n  output$selectedID_page3 &lt;- reactive({\n    if (input$data_option_page3 == \"default\") {\n      req(input$pid_page3)\n      paste('Prediction of marginal effect using lmeipw() for the selected subject ID: ',input$pid_page3)\n    } else {\n      req(input$pid_page33)\n      paste('Prediction of marginal effect using lmeipw() for the selected subject ID: ',input$pid_page33)\n    }\n  })\n  rv&lt;-reactiveValues(model_page3=NULL)\n  observeEvent(input$submit_page3,{\n    # Load default data\n    output$summarymodel_page3 &lt;- renderPrint({\n      req(input$analysismodel_page3)\n      req(input$impmodel_page3)\n      req(input$wgtmodel_page3)\n      req(input$idvar_page3)\n      req(input$nimp_page3)\n      \n      intval_page3&lt;-function(){\n        amodel_page3&lt;-as.formula(input$analysismodel_page3)\n        wmodel_page3&lt;-as.formula(input$wgtmodel_page3)\n        newdata&lt;-defaultlongdata_page3()\n        r.ij&lt;-ifelse(is.na(defaultlongdata_page3()[[all.vars(amodel_page3)[1]]])==T,0,1)\n        newdata&lt;-cbind.data.frame(newdata,r.ij)\n        newdata&lt;-cbind(r.ij=ifelse(is.na(newdata[[all.vars(amodel_page3)[1]]])==T,0,1),newdata)\n        model.r&lt;-glmer(as.formula(paste0('r.ij',input$wgtmodel_page3)),family=binomial(link='logit'),\n                       data=newdata)\n        nu&lt;-model.r@beta\n        sigmaR&lt;-get_variance(model.r)$var.random\n        result&lt;-list()\n        result$nu&lt;-as.matrix(nu,ncol=1)\n        result$sigmaR&lt;-sigmaR\n        return(result)\n      }\n      \n      intvalue_page3&lt;-intval_page3()\n      fitmodel_page33 &lt;- lmeipw1(data= defaultlongdata_page3() ,\n                                id= input$idvar_page3,\n                                analysis.model= as.formula(input$analysismodel_page3),\n                                wgt.model= as.formula(input$wgtmodel_page3),\n                                nu= intvalue_page3$nu,\n                                sigmaR= intvalue_page3$sigmaR,\n                                dist= 'gaussian',\n                                link= 'identity',\n                                maxiter= 200)\n      rv$model_page3&lt;-fitmodel_page33\n      list(beta=fitmodel_page33$beta,var.beta=fitmodel_page33$var.beta)\n    })\n    \n  })\n  \n  observeEvent(input$submit_page3,{\n    # Load default data\n    output$predplot_page3 &lt;- renderPlot({\n      req(input$data_option_page3)\n      if(input$data_option_page3 == \"default\"){\n        req(input$analysismodel_page3)\n        #req(input$impmodel_page3)\n        req(input$wgtmodel_page3)\n        req(input$idvar_page3)\n        req(input$timevar_page3)\n        #req(input$nimp_page3)\n        req(input$by_page3)\n        req(input$pid_page3)\n        modelfitplot&lt;-rv$model_page3\n        modeltimevar&lt;-input$timevar_page3\n        newdata&lt;-defaultlongdata_page3()[defaultlongdata_page3()[[input$idvar_page3]]==input$pid_page3,]\n        m22&lt;-predLME(newdata = newdata,fittedObject = rv$model_page3,time=input$timevar_page3,by=input$by_page3)\n        predplotLME(m22)\n      }else{\n        req(input$analysismodel_page3)\n        #req(input$impmodel_page3)\n        req(input$wgtmodel_page3)\n        req(input$idvar_page3)\n        req(input$timevar_page3)\n        #req(input$nimp_page3)\n        req(input$by_page3)\n        req(input$pid_page33)\n        modelfitplot&lt;-rv$model_page3\n        modeltimevar&lt;-input$timevar_page3\n        newdata&lt;-defaultlongdata_page3()[defaultlongdata_page3()[[input$idvar_page3]]==input$pid_page33,]\n        m22&lt;-predLME(newdata = newdata,fittedObject = rv$model_page3,time=input$timevar_page3,by=input$by_page3)\n        predplotLME(m22)\n      }\n    })\n  })\n  \n  \n  \n  \n},\n  options = list(height=1000,width=\"100%\")\n)"
  },
  {
    "objectID": "miipw.html#column-3",
    "href": "miipw.html#column-3",
    "title": "lmeMIIPW",
    "section": "Column",
    "text": "Column\n\nshinyApp(\n  ui_page4 &lt;- fluidPage(\n  titlePanel(\"lmemeanscore\"),\n  sidebarLayout(\n    sidebarPanel(\n      radioButtons(\"data_option_page4\", \"Select data source:\",\n                   c(\"Upload your own dataset\" = \"upload\",\n                     \"Use default(PBC2 data)\" = \"default\")),\n      conditionalPanel(\n        condition = \"input.data_option_page4== 'default'\",\n        selectInput(\"pid_page4\", \"ID\", choices=unique(pbc2$id),selectize = FALSE,size=5)\n      ),\n      conditionalPanel(\n        condition = \"input.data_option_page4 == 'upload'\",\n        fileInput(\"lfile_page4\", \"Upload Longitudinal Data (CSV format)\"),\n        uiOutput(\"pid_slider_upload_page4\")\n      ),\n      selectInput(\"idvar_page4\", \"ID variable\", choices =NULL),\n      selectInput(\"timevar_page4\", \"Time dependent covariate\", choices = NULL),\n      textInput(\"analysismodel_page4\", \"Longitudinal data analysis model\", value = \"alkaline~year\"),\n      textInput(\"impmodel_page4\", \"Imputation model for missing response\", value = \"~year+age+sex+drug+serBilir+(1|id)\"),\n      textInput(\"wgtmodel_page4\", \"IPW model\", value = \"~year+age+sex+drug+serBilir+(1|id)\"),\n      numericInput('by_page4',\"Interval length for prediction\",value=1),\n      numericInput(\"nimp_page4\", \"Number of imputation\", value = 1),\n      actionButton(\"submit_page4\", \"Submit\")\n    ),\n    mainPanel(\n      p('lmemeanscore(): a function specifically developed(If your dataset donot have missing value. \n      Please donot use this...) for semiparametric marginal model for longitudinal data where\n      there are missing values in response variable (currently we are considering Continuous/\n      extension for other option will be done in future) of the analysis model. \n      For more information about the arguments of the function please look ',a(\"here.\",href = \"https://cran.r-project.org/web/packages/jmBIG/index.html\")),\n      \n      verbatimTextOutput('summarymodel_page4'),\n      textOutput('selected_var_page4'),\n      textOutput('selectedID_page4'),\n      plotOutput('predplot_page4')\n    )\n  )\n)\n,\n server_page4 &lt;- function(input, output, session) {\n  defaultlongdata_page4 &lt;- reactive({\n    if (input$data_option_page4 == 'upload') {\n      req(input$lfile_page4)\n      defaultlongdata_page4 &lt;- read.csv(input$lfile_page4$datapath)\n    } else {\n      defaultlongdata_page4 &lt;- pbc2\n    }\n    return(defaultlongdata_page4)\n  })\n  observeEvent(defaultlongdata_page4(), {\n    updateSelectInput(session, \"idvar_page4\", choices = names(defaultlongdata_page4()))\n  })\n  defaultlongdataid_page4 &lt;- reactive({\n    if (input$data_option_page4 == 'upload') {\n      req(input$lfile_page4)\n      req(input$idvar_page4)\n      defaultlongdataid_page4 &lt;- read.csv(input$lfile_page4$datapath)\n      defaultlongdataid_page4 &lt;-defaultlongdataid_page4[!duplicated(defaultlongdataid_page4[[input$idvar_page4]]),]\n    } else {\n      defaultlongdataid_page4 &lt;- pbc2\n      defaultlongdataid_page4 &lt;-defaultlongdataid_page4[!duplicated(defaultlongdataid_page4[[input$idvar_page4]]),]\n    }\n    return(defaultlongdataid_page4)\n  })\n  # Render PID slider for uploaded data\n  output$pid_slider_upload_page4 &lt;- renderUI({\n    req(input$idvar_page4)\n    tagList(\n      selectInput(\"pid_page44\", \"Subject ID\", choices=defaultlongdataid_page4()[[input$idvar_page4]],selectize = FALSE,size=5)\n    )\n  })\n  observeEvent(defaultlongdata_page4(), {\n    updateSelectInput(session, \"timevar_page4\", choices = names(defaultlongdata_page4()))\n  })\n  output$selected_var_page4 &lt;- reactive({\n    if (input$data_option_page4 == \"default\") {\n      req(input$pid_page4)\n      paste(\"You have selected patient ID\", input$pid_page4)\n    } else {\n      req(input$pid_page44)\n      paste(\"Uploaded data selected with patient ID\",input$pid_page44)\n    }\n  })\n  output$selectedID_page4 &lt;- reactive({\n    \n    if (input$data_option_page4 == \"default\") {\n      req(input$pid_page4)\n      paste('Prediction of marginal effect using lmemeanscore() for the selected subject ID: ',input$pid_page4)\n    } else {\n      req(input$pid_page44)\n      paste('Prediction of marginal effect using lmemeanscore() for the selected subject ID: ',input$pid_page44)\n    }\n  })\n  rv&lt;-reactiveValues(model_page4=NULL)\n  observeEvent(input$submit_page4,{\n    # Load default data\n    output$summarymodel_page4 &lt;- renderPrint({\n      req(input$analysismodel_page4)\n      req(input$impmodel_page4)\n      req(input$wgtmodel_page4)\n      req(input$idvar_page4)\n      req(input$nimp_page4)\n      intval_page4&lt;-function(){\n        amodel_page4&lt;-as.formula(input$analysismodel_page4)\n        imodel_page4&lt;-as.formula(input$impmodel_page4)\n        newdata&lt;-defaultlongdata_page4()\n        r.ij&lt;-ifelse(is.na(defaultlongdata_page4()[[all.vars(amodel_page4)[1]]])==T,0,1)\n        newdata&lt;-cbind.data.frame(newdata,r.ij)\n        newdata&lt;-cbind(r.ij=ifelse(is.na(newdata[[all.vars(amodel_page4)[1]]])==T,0,1),newdata)\n        model.y&lt;-lmer(as.formula(paste0(all.vars(amodel_page4)[1],input$impmodel_page4)),data=na.omit(newdata))\n        psi&lt;-model.y@beta\n        sigma&lt;-get_variance_residual(model.y)\n        sigmaMiss&lt;-get_variance(model.y)$var.random\n        result&lt;-list()\n        result$psi&lt;-as.matrix(psi,ncol=1)\n        result$sigma&lt;-sigma\n        result$sigmaMiss&lt;-sigmaMiss\n        result$psiCov&lt;-vcov(model.y)\n        return(result)\n      }\n      intvalue_page4&lt;-intval_page4()\n      fitmodel_page44 &lt;- lmemeanscore1(data= defaultlongdata_page4() ,\n                                  id= input$idvar_page4,\n                                  analysis.model= as.formula(input$analysismodel_page4),\n                                  imp.model= as.formula(input$impmodel_page4),\n                                  psiCov= intvalue_page4$psiCov,\n                                  psi= intvalue_page4$psi,\n                                  sigma= intvalue_page4$sigma,\n                                  sigmaMiss= intvalue_page4$sigmaMiss,\n                                  dist= 'gaussian',\n                                  link= 'identity',\n                                  maxiter= 200)\n      #remove(intvalue_page2,intval_page2)\n      rv$model_page4&lt;-fitmodel_page44\n      #print(fitmodel_page22)\n      list(beta=fitmodel_page44$beta,var.beta=fitmodel_page44$var.beta)\n    })\n  })\n  observeEvent(input$submit_page4,{\n    # Load default data\n    output$predplot_page4 &lt;- renderPlot({\n      req(input$data_option_page4)\n      if(input$data_option_page4 == \"default\"){\n        req(input$analysismodel_page4)\n        req(input$impmodel_page4)\n        req(input$wgtmodel_page4)\n        req(input$idvar_page4)\n        req(input$timevar_page4)\n        req(input$by_page4)\n        req(input$nimp_page4)\n        req(input$pid_page4)\n        modelfitplot&lt;-rv$model_page4\n        modeltimevar&lt;-input$timevar_page4\n        newdata&lt;-defaultlongdata_page4()[defaultlongdata_page4()[[input$idvar_page4]]==input$pid_page4,]\n        m22&lt;-predLME(newdata = newdata,fittedObject = rv$model_page4,time=input$timevar_page4,by=input$by_page4)\n        predplotLME(m22)\n      }else{\n        req(input$analysismodel_page4)\n        req(input$impmodel_page4)\n        req(input$wgtmodel_page4)\n        req(input$idvar_page4)\n        req(input$timevar_page4)\n        req(input$nimp_page4)\n        req(input$by_page4)\n        req(input$pid_page44)\n        modelfitplot&lt;-rv$model_page4\n        modeltimevar&lt;-input$timevar_page4\n        newdata&lt;-defaultlongdata_page4()[defaultlongdata_page4()[[input$idvar_page4]]==input$pid_page44,]\n        m22&lt;-predLME(newdata = newdata,fittedObject = rv$model_page4,time=input$timevar_page4,by=input$by_page4)\n        predplotLME(m22)\n      }\n    })\n  })\n},\n  options = list(height=1000,width=\"100%\")\n)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "bhrigukumar",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  }
]